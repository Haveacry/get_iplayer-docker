name: Check get_iplayer version

on:
  workflow_dispatch:
  schedule:
    - cron: "11 6 * * *"

jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
      - name: Check get_iplayer commit
        id: iplayerversion
        run: |
          NEW_VER=`curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/get-iplayer/get_iplayer/commits?per_page=1 2>/dev/null | jq '.[0] | .sha' | sed -e "s/\"//g"`
          echo "::set-output name=iplayerver::$NEW_VER"
      - name: Check local repo release
        id: localversion
        run: |
          CUR_VER=`cat .iplayercommit`
          echo "::set-output name=localver::$CUR_VER"
    outputs:
      iplayerver: ${{ steps.iplayerversion.outputs.iplayerver }}
      localver: ${{ steps.localversion.outputs.localver }}

  update_iplayer:
    runs-on: ubuntu-latest
    needs: check_version
    if: ${{ needs.check_version.outputs.iplayerver != needs.check_version.outputs.localver && needs.check_version.outputs.iplayerver != '' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
      - name: Update version file
        id: update
        run: |
          echo ${{ needs.check_version.outputs.iplayerver }} > .iplayercommit
          IPLAYERCOMMIT=${{ needs.check_version.outputs.iplayerver }}
          SHORTCOMMIT=${IPLAYERCOMMIT:0:7}
          echo "::set-output name=shortcommit::$SHORTCOMMIT"
      - name: Commit and tag
        uses: EndBug/add-and-commit@v7
        with:
          message: "Release ${{ steps.update.outputs.shortcommit }}"
          add: ".iplayercommit"
          tag: ${{ steps.update.outputs.shortcommit }}
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.update.outputs.shortcommit }}
          token: ${{ secrets.PAT }}
